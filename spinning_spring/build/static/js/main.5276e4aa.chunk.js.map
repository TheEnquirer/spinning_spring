{"version":3,"sources":["components/spring.jsx","App.js","reportWebVitals.js","index.js"],"names":["r","prev_r","rp","prev_rp","th","prev_th","w","size","path","dt","sinm","props","cart","theta","Math","cos","sin","calcW","className","setup","p5","canvasParentRef","createCanvas","parent","draw","i","ellipseMode","CENTER","translate","background","fill","noStroke","ellipse","data","f","pow","k","gen","x","y","unshift","slice","keyPressed","_p5","e","key","mod","style","maxWidth","minWidth","min","max","railStyle","trackStyle","dotStyle","border","handleStyle","defaultValue","onChange","marks","0","label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5276e4aa.chunk.js","sourcesContent":["import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport '../App.css';\n\n\n//let x = 0\n//let y = 0\nlet cnv;\n\n\n\nlet theta = 0;\n//let w = 0.04;\nlet w = 1.0\n\nlet size = 1000;\n\n\nlet path = []\n\nlet r, prev_r, rp, prev_rp, th, prev_th;\n\nr = rp = prev_rp = th = 0;\n\nprev_r = 0.01\nprev_th = 1\n\nlet k = 2\nlet m = 1\nlet dt = 0.01\n\nlet sinm = true\n\nexport default (props) => {\n    const setup = (p5, canvasParentRef) => {\n\tcnv = p5.createCanvas(size, size).parent(canvasParentRef)\n\t//console.log(cnv)\n\t//cnv.keyPressed((event) => {\n\t//    console.log(\"Clicked on the canvas. Event:\", event)\n\t//})\n    }\n\n    const cart = (r, theta) => {\n\treturn ([r * Math.cos(theta), r* Math.sin(theta)])\n    };\n\n    const keyPressed = (_p5, e) => {\n\tif (e.key == \"ArrowUp\" || e.key == \"w\") {\n\t    w += 0.1\n\t}\n\tif (e.key == \"ArrowDown\" || e.key == \"s\") {\n\t    w -= 0.1\n\t}\n\n\tif (e.key == \"m\") {\n\t    if (sinm) {\n\t\tcalcW = () => {\n\t\t    let mod = Math.sin(w)\n\t\t    w += 0.1\n\t\t    return mod\n\t\t}\n\t\tsinm = false\n\t    }\n\t    else {\n\t\tcalcW = () => {\n\t\t    let mod = w\n\t\t    return mod\n\t\t}\n\t\tw = 1.0\n\t\tsinm = true\n\t    }\n\t}\n    }\n\n    const gen = () => {\n\tlet f = Math.pow(calcW(), 2) - k/m\n\tr = prev_r + prev_rp * dt\n\trp = prev_rp + f * prev_r*dt\n\tth = prev_th + calcW() *dt\n\n\tprev_r = r\n\tprev_rp = rp\n\tprev_th = th\n\t//console.log(r, th)\n\treturn [r*18000, th*7]\n\n\t//theta += w;\n\t//return theta\n    }\n\n    let calcW = () => {\n\t//let mod = Math.cos(w)\n\t//let mod = Math.sqrt(w)\n\t//w -= 0.1\n\t//w -= 0.01\n\t//let mod = Math.sin(w)\n\t//let mod = Math.cos(w)\n\t//console.log(mod)\n\t//w += 0.1\n\tlet mod = w\n\treturn mod\n    }\n\n    const draw = (p5) => {\n\t//p5.clear()\n\tp5.ellipseMode(p5.CENTER);\n\tp5.translate(size / 2, size / 2);\n\tp5.background(\"#231c14\");\n\tp5.fill(\"#CEC9BD\");\n\tp5.noStroke();\n\n\n\tlet i;\n\tfor (i in path) {\n\t    p5.fill(`rgba(206, 201, 189, ${10/i})`);\n\t    p5.ellipse(path[i][0], path[i][1], 5, 5);\n\t}\n\t//console.log(path.length)\n\n\n\t//p5.fill('rgba(0,255,0, 0.5)');\n\t//p5.ellipse(0, 0, size, size);\n\n\tp5.fill(\"#CEC9BD\");\n\tlet data = gen()\n\n\tlet x = cart(data[0], data[1])[0]\n\tlet y = cart(data[0], data[1])[1]\n\tp5.ellipse(x, y, 25, 25);\n\n\n\tpath.unshift([x, y])\n\tpath = path.slice(0, 500)\n\t//console.log(path)\n\t//console.log(cart(5, 5))\n\t// NOTE: Do not use setState in the draw function or in functions that are executed\n\t// in the draw function...\n\t// please use normal variables or class properties for these purposes\n\t//x++;\n    };\n\n    return (\n\t<div className=\"wrapper\">\n\t    <Sketch setup={setup} draw={draw} keyPressed={keyPressed}/>\n\t    <div style={{maxWidth: 500, minWidth: 500}}>\n\t\t<Slider min={-100} max={300}\n\t\t    className={\"slider\"}\n\t\t    railStyle={{\n\t\t\t//padding: 10, border: \"red\", background: \"red\"\n\t\t\tbackground: \"#FFF8E9\"\n\t\t    }}\n\t\t    trackStyle={[ {background: \"#cec9bd\"} ]}\n\t\t    dotStyle={{background: \"#BAB7AE\", border: \"2px solid #9B8E6E\"}}\n\t\t    handleStyle={[ {border: \"3px solid #897142\", background: \"#D8D2C6\"} ]}\n\t\t    defaultValue = {w*100}\n\t\t    onChange={(e) => { w = e / 100;\n\n\t\t    //console.log(path[0])\n\t\t    }}\n\t\t    marks={{0: {style: \"\", label: \"0\"}}}\n\t\t/>\n\t    </div>\n\t</div>\n    )\n};\n","import './App.css';\nimport Sketch from \"./components/spring\"\n\nfunction App() {\n  return (\n    <div className=\"main\">\n\t<Sketch />\n\t<p className=\"help\"> Use the slider, or press <span className=\"kbd\">w</span> to increase angular velocity, and <span className=\"kbd\">s</span> to decrease angular velocity. <br /> <br />\n\t    Press <span className=\"kbd nl\">m</span> to switch to sin mode.\n\t</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}