{"version":3,"sources":["components/spring.jsx","App.js","reportWebVitals.js","index.js"],"names":["r","prev_r","rp","prev_rp","th","prev_th","w","path","dt","sinm","props","cart","theta","Math","cos","sin","calcW","className","setup","p5","canvasParentRef","createCanvas","parent","draw","i","ellipseMode","CENTER","translate","width","height","background","fill","noStroke","ellipse","data","f","pow","k","gen","x","y","unshift","slice","keyPressed","_p5","e","key","mod","style","maxWidth","minWidth","zIndex","paddingTop","min","max","railStyle","trackStyle","dotStyle","border","handleStyle","defaultValue","onChange","marks","0","label","App","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8dca4c56.chunk.js","sourcesContent":["import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport '../App.css';\n\n\n//let x = 0\n//let y = 0\nlet cnv;\n\n\n\nlet theta = 0;\n//let w = 0.04;\nlet w = 1.0\n\n//let height = 600;\nlet height = 600;\nlet width = 1000;\n\n\nlet path = []\n\nlet r, prev_r, rp, prev_rp, th, prev_th;\n\nr = rp = prev_rp = th = 0;\n\nprev_r = 0.01\nprev_th = 1\n\nlet k = 2\nlet m = 1\nlet dt = 0.01\n\nlet sinm = true\n\nexport default (props) => {\n    const setup = (p5, canvasParentRef) => {\n\tcnv = p5.createCanvas(width, height).parent(canvasParentRef)\n\t//console.log(cnv)\n\t//cnv.keyPressed((event) => {\n\t//    console.log(\"Clicked on the canvas. Event:\", event)\n\t//})\n    }\n\n    const cart = (r, theta) => {\n\treturn ([r * Math.cos(theta), r* Math.sin(theta)])\n    };\n\n    const keyPressed = (_p5, e) => {\n\tif (e.key == \"ArrowUp\" || e.key == \"w\") {\n\t    w += 0.1\n\t}\n\tif (e.key == \"ArrowDown\" || e.key == \"s\") {\n\t    w -= 0.1\n\t}\n\n\tif (e.key == \"m\") {\n\t    if (sinm) {\n\t\tcalcW = () => {\n\t\t    let mod = Math.sin(w)\n\t\t    w += 0.1\n\t\t    return mod\n\t\t}\n\t\tsinm = false\n\t    }\n\t    else {\n\t\tcalcW = () => {\n\t\t    let mod = w\n\t\t    return mod\n\t\t}\n\t\tw = 1.0\n\t\tsinm = true\n\t    }\n\t}\n    }\n\n    const gen = () => {\n\tlet f = Math.pow(calcW(), 2) - k/m\n\tr = prev_r + prev_rp * dt\n\trp = prev_rp + f * prev_r*dt\n\tth = prev_th + calcW() *dt\n\n\tprev_r = r\n\tprev_rp = rp\n\tprev_th = th\n\t//console.log(r, th)\n\treturn [r*18000, th*7]\n\n\t//theta += w;\n\t//return theta\n    }\n\n    let calcW = () => {\n\t//let mod = Math.cos(w)\n\t//let mod = Math.sqrt(w)\n\t//w -= 0.1\n\t//w -= 0.01\n\t//let mod = Math.sin(w)\n\t//let mod = Math.cos(w)\n\t//console.log(mod)\n\t//w += 0.1\n\tlet mod = w\n\treturn mod\n    }\n\n    const draw = (p5) => {\n\t//p5.clear()\n\tp5.ellipseMode(p5.CENTER);\n\tp5.translate(width / 2, height / 2);\n\tp5.background(\"#231c14\");\n\tp5.fill(\"#CEC9BD\");\n\tp5.noStroke();\n\n\n\tlet i;\n\tfor (i in path) {\n\t    p5.fill(`rgba(206, 201, 189, ${10/i})`);\n\t    p5.ellipse(path[i][0], path[i][1], 5, 5);\n\t}\n\t//console.log(path.length)\n\n\n\t//p5.fill('rgba(0,255,0, 0.5)');\n\t//p5.ellipse(0, 0, size, size);\n\n\tp5.fill(\"#CEC9BD\");\n\tlet data = gen()\n\n\tlet x = cart(data[0], data[1])[0]\n\tlet y = cart(data[0], data[1])[1]\n\tp5.ellipse(x, y, 25, 25);\n\n\n\tpath.unshift([x, y])\n\tpath = path.slice(0, 500)\n\t//console.log(path)\n\t//console.log(cart(5, 5))\n\t// NOTE: Do not use setState in the draw function or in functions that are executed\n\t// in the draw function...\n\t// please use normal variables or class properties for these purposes\n\t//x++;\n    };\n\n    return (\n\t<div className=\"wrapper\">\n\t    <Sketch setup={setup} draw={draw} keyPressed={keyPressed}/>\n\t    <div style={{maxWidth: 500, minWidth: 500, zIndex: 50, paddingTop: \"3rem\"}}>\n\t\t<Slider min={-100} max={300}\n\t\t    className={\"slider\"}\n\t\t    railStyle={{\n\t\t\t//padding: 10, border: \"red\", background: \"red\"\n\t\t\tbackground: \"#FFF8E9\"\n\t\t    }}\n\t\t    trackStyle={[ {background: \"#cec9bd\"} ]}\n\t\t    dotStyle={{background: \"#BAB7AE\", border: \"2px solid #9B8E6E\"}}\n\t\t    handleStyle={[ {border: \"3px solid #897142\", background: \"#D8D2C6\"} ]}\n\t\t    defaultValue = {w*100}\n\t\t    onChange={(e) => { w = e / 100;\n\n\t\t    //console.log(path[0])\n\t\t    }}\n\t\t    marks={{0: {style: \"\", label: \"0\"}}}\n\t\t/>\n\t    </div>\n\t</div>\n    )\n};\n","import './App.css';\nimport Sketch from \"./components/spring\"\n\nfunction App() {\n    document.body.style = 'background: #231c14;';\n    return (\n\t<div className=\"main\">\n\t    <Sketch />\n\t    <p className=\"help\"> Use the slider, or press <span className=\"kbd\">w</span> to increase angular velocity, and <span className=\"kbd\">s</span> to decrease angular velocity. <br /> <br />\n\t\tPress <span className=\"kbd nl\">m</span> to switch to sin mode.\n\t    </p>\n\t</div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}